apiVersion: batch/v1
kind: Job
metadata:
  name: medical-train
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: medical-train
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: gpu
                    operator: In
                    values:
                      - p100
      containers:
        - args:
            - pip install -e ./Medical-Gym && cd Medical-RL && python main.py
              --batch_size 256 --num_cpu 128 --inference_batch_size 4
              --rollout_fragment_length 32 --num_gpu 1 --learning_rate 3e-05
              --num_gpu_per_worker 0.25 --num_workers 4 --max_episodes 5000000
              --max_diseases 256 --sequence_length 128 --replay_proportion 0.1
              --log_dir /trainingdata/medical_rl
              --log_level WARN --model_name_or_path prajjwal1/bert-mini
          command:
            - /bin/sh
            - -c
          env:
            - name: TUNE_MAX_PENDING_TRIALS_PG
              value: "5"
          image: registry.datexis.com/bwinter/medicalrl:latest
          name: medical-train
          ports:
            - containerPort: 22
          resources:
            limits:
              #memory: 16000Mi
              nvidia.com/gpu: "1.0"
            requests:
              #memory: 16000Mi
              nvidia.com/gpu: "1.0"
          volumeMounts:
            - mountPath: "/trainingdata"
              name: trainingdata
            - mountPath: /dev/shm
              name: dshm
          workingDir: /trainingdata/medical_rl
      imagePullSecrets:
        - name: private-registry-auth
      restartPolicy: Never
      volumes:
        - name: trainingdata
          persistentVolumeClaim:
            claimName: trainingdata-pvc
        - emptyDir:
            medium: Memory
          name: dshm
